Option Explicit On

Imports System
Imports System.Data
Imports System.Data.SqlClient
Imports System.Diagnostics
Imports System.Text
Imports Components
	
Namespace DataLayer

    Public Class StatementRow
        Inherits StatementRowBase

        Public Sub New()
            MyBase.New()
        End Sub 'New

        Public Sub New(ByVal DB As Database)
            MyBase.New(DB)
        End Sub 'New

        Public Sub New(ByVal DB As Database, StatementId As Integer)
            MyBase.New(DB, StatementId)
        End Sub 'New

        'Shared function to get one row
        Public Shared Function GetRow(ByVal DB As Database, ByVal StatementId As Integer) As StatementRow
            Dim row As StatementRow

            row = New StatementRow(DB, StatementId)
            row.Load()

            Return row
        End Function

        Public Shared Sub RemoveRow(ByVal DB As Database, ByVal StatementId As Integer)
            Dim row As StatementRow

            row = New StatementRow(DB, StatementId)
            row.Remove()
        End Sub

        Public Shared Function GetList(ByVal DB As Database, Optional ByVal SortBy As String = "", Optional SortOrder As String = "ASC") As DataTable
            Dim SQL As String = "select * from Statement"
            If Not SortBy = String.Empty Then
                SortBy = Core.ProtectParam(SortBy)
                SortOrder = Core.ProtectParam(SortOrder)

                SQL &= " order by " & SortBy & " " & SortOrder
            End If
            Return DB.GetDataTable(SQL)
        End Function

        'Custom Methods
        


    End Class
	
	Public MustInherit Class StatementRowBase
		Private m_DB as Database
        Private m_StatementId As Integer = Nothing
        Private m_FileName As String = Nothing
        Private m_StatementDate As DateTime = Nothing
        Private m_HistoricID As Integer = Nothing


	
        Public Property StatementId As Integer
            Get
                Return m_StatementId
            End Get
            Set(ByVal Value As Integer)
                m_StatementId = Value
            End Set
        End Property
	

	
        Public Property FileName() As String
            Get
                Return m_FileName
            End Get
            Set(ByVal Value As String)
                m_FileName = Value
            End Set
        End Property
	
	
	
        Public Property StatementDate As DateTime
            Get
                Return m_StatementDate
            End Get
            Set(ByVal Value As DateTime)
                m_StatementDate = Value
            End Set
        End Property
	
        Public Property HistoricID() As Integer
            Get
                Return m_HistoricID
            End Get
            Set(ByVal value As Integer)
                m_HistoricID = value
            End Set
        End Property

	
		Public Property DB() As Database
			Get
				DB = m_DB
			End Get
			Set(ByVal Value As DataBase)
				m_DB = Value
			End Set
		End Property
	
		Public Sub New()
		End Sub 'New
	
		Public Sub New(ByVal DB As Database)
			m_DB = DB
		End Sub 'New
	
        Public Sub New(ByVal DB As Database, StatementId As Integer)
            m_DB = DB
            m_StatementId = StatementId
        End Sub 'New
		
		Protected Overridable Sub Load()
			Dim r As SqlDataReader
			Dim SQL As String
	
            SQL = "SELECT * FROM statement WHERE StatementId = " & DB.Number(StatementId)
			r = m_DB.GetReader(SQL)
			If r.Read Then
				Me.Load(r)
			End If
			r.Close()
		End Sub
	
	
		Protected Overridable Sub Load(ByVal r as sqlDataReader)
            m_StatementId = Convert.ToInt32(r.Item("StatementId"))
            m_FileName = Convert.ToString(r.Item("FileName"))
            m_StatementDate = Convert.ToDateTime(r.Item("StatementDate"))
            m_HistoricID = Core.GetInt(r.Item("HistoricID"))
		End Sub 'Load
	
		Public Overridable Function Insert() as Integer
			Dim SQL as String
	
           
            SQL = " INSERT INTO Statement (" _
             & "HistoricId" _
             & ",FileName" _
             & ",StatementDate" _
             & ") VALUES (" _
             & m_DB.NullNumber(HistoricID) _
             & "," & m_DB.Quote(FileName) _
             & "," & m_DB.NullQuote(StatementDate) _
             & ")"

            StatementId = m_DB.InsertSQL(SQL)
			
            Return StatementId
		End Function
	
		Public Overridable Sub Update()
			Dim SQL As String
	
            SQL = " UPDATE Statement SET " _
             & " HistoricId = " & m_DB.NullNumber(HistoricID) _
             & ",FileName = " & m_DB.Quote(FileName) _
             & ",StatementDate = " & m_DB.NullQuote(StatementDate) _
             & " WHERE StatementId = " & m_DB.Quote(StatementId)
	
			m_DB.ExecuteSQL(SQL)
	
		End Sub 'Update
	
		Public Sub Remove()
			Dim SQL As String
	
            SQL = "DELETE FROM Statement WHERE StatementId = " & m_DB.Number(StatementId)
			m_DB.ExecuteSQL(SQL)
		End Sub 'Remove
	End Class
	
    Public Class StatementCollection
        Inherits GenericCollection(Of StatementRow)
    End Class

End Namespace

